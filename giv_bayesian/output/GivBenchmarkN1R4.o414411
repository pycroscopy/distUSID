/lustre/or-hydra/cades-ccsd/syz/pycroscopy_ensemble/giv_bayesian_pure_mpi
total 325M
-rw-r--r-- 1 syz cades-ccsd  928 Sep 22 22:29 attribute_race_test.h5
-rw-r--r-- 1 syz cades-ccsd  721 Sep 25 13:17 bayesian_script_mpi.py
-rw-r--r-- 1 syz cades-ccsd  536 Sep 21 18:23 bayesian_script_single_node.py
-rw-r--r-- 1 syz cades-ccsd  19K Sep 25 13:17 giv_bayesian_mpi.py
-rw-r--r-- 1 syz cades-ccsd  15K Sep 21 18:23 giv_bayesian_mpi.pyc
-rwx------ 1 syz cades-ccsd 321M Sep 25 13:17 giv_raw.h5
-rw-r--r-- 1 syz cades-ccsd  21K Sep 25 13:17 giv_utils.py
-rw-r--r-- 1 syz cades-ccsd  619 Sep 22 22:28 h5_attribute_race_test.py
-rw-r--r-- 1 syz cades-ccsd  39K Sep 25 13:17 mpi_process.py
drwxr-sr-x 2 syz cades-ccsd  41K Sep 25 12:00 __pycache__
--------------------------------------------------------------------------
An MPI process has executed an operation involving a call to the
"fork()" system call to create a child process.  Open MPI is currently
operating in a condition that could result in memory corruption or
other system errors; your MPI job may hang, crash, or produce silent
data corruption.  The use of fork() (or system() or other calls that
create child processes) is strongly discouraged.  

The process that invoked fork was:

  Local host:          or-condo-c152 (PID 56135)
  MPI_COMM_WORLD rank: 0

If you are *absolutely sure* that your application will successfully
and correctly survive a call to fork(), you may disable this warning
by setting the mpi_warn_on_fork MCA parameter to 0.
--------------------------------------------------------------------------
Rank 0 of 4 on or-condo-c152.ornl.gov sees 32 logical cores on the socket
Working on 4 ranks via MPI
Rank 2 of 4 on or-condo-c152.ornl.gov sees 32 logical cores on the socket
Rank 1 of 4 on or-condo-c152.ornl.gov sees 32 logical cores on the socket
Rank 3 of 4 on or-condo-c152.ornl.gov sees 32 logical cores on the socket
Rank:  2 , sendbuf:  or-condo-c152.ornl.gov
Rank:  0 , sendbuf:  or-condo-c152.ornl.gov
Rank:  3 , sendbuf:  or-condo-c152.ornl.gov
Rank:  1 , sendbuf:  or-condo-c152.ornl.gov
Rank:  0 , recvbuf received:  ['or-condo-c152.ornl.gov', 'or-condo-c152.ornl.gov', 'or-condo-c152.ornl.gov', 'or-condo-c152.ornl.gov']
Unique sockets: ['or-condo-c152.ornl.gov']
Parent rank for all ranks: [0 0 0 0]
Rank 0 - on socket with 32 logical cores and 122.26 GB avail. RAM shared by 4 ranks each given 1 cores.
Allowed to read 16410043 pixels per chunk
Max positions per read set to 3282008
Consider calling test() to check results before calling compute() which computes on the entire dataset and writes back to the HDF5 file
ensuring that half steps should be odd, num_x_steps is now 250
Checking for duplicates:
Creating HDF5 group and datasets to hold results
Now creating the datasets
created group: /Measurement_000/Channel_000/Raw_Data-FFT_Filtering_000/Filtered_Data-Reshape_000/Reshaped_Data-Bayesian_Inference_000 with attributes:
{'machine_id': 'or-condo-c152.ornl.gov', 'timestamp': '2018_09_25-13_17_34', 'pyUSID_version': '0.0.4', 'platform': 'Linux-3.10.0-327.4.4.el7.x86_64-x86_64-with-centos-7.5.1804-Core', 'tool': 'Bayesian_Inference', 'num_source_dsets': 1, 'source_000': <HDF5 object reference>, 'algorithm_author': 'Kody J. Law', 'last_pixel': 0, 'freq': 200.0, 'num_x_steps': 250, 'r_extra': 110, 'gam': 0.03, 'e': 10.0, 'sigma': 10.0, 'sigmaC': 1.0, 'num_samples': 2000.0}
Created I Corrected
Created Resistance
Created Variance
Created Capacitance
Done creating all results datasets!
Rank 3 will read positions 51072 to 68096 of 68096
Rank 2 will read positions 34048 to 51072 of 68096
Rank 1 will read positions 17024 to 34048 of 68096
Among the 68096 positions in this dataset, the following positions need to be computed: [    0     1     2 ... 68093 68094 68095].
Each rank is required to work on 17024 of the 68096 (remaining) positions in this dataset.
Rank 0 will read positions 0 to 17024 of 68096
Rank 3 - Read positions: [51072 51073 51074 ... 68093 68094 68095]
Rank 2 - Read positions: [34048 34049 34050 ... 51069 51070 51071]
Rank 0 - Read positions: [    0     1     2 ... 17021 17022 17023]
Rank 1 - Read positions: [17024 17025 17026 ... 34045 34046 34047]
Rank 3 beginning parallel compute for Forward
Rank 3 starting computing on 1 cores (requested 1 cores)
Rank 3 computing serially ...
Rank 2 beginning parallel compute for Forward
Rank 0 beginning parallel compute for Forward
Rank 1 beginning parallel compute for Forward
Rank 2 starting computing on 1 cores (requested 1 cores)
Rank 2 computing serially ...
Rank 0 starting computing on 1 cores (requested 1 cores)
Rank 0 computing serially ...
Rank 1 starting computing on 1 cores (requested 1 cores)
Rank 1 computing serially ...
Rank 3 finished processing forward sections. Now working on reverse sections....
Rank 3 starting computing on 1 cores (requested 1 cores)
Rank 3 computing serially ...
Rank 2 finished processing forward sections. Now working on reverse sections....
Rank 2 starting computing on 1 cores (requested 1 cores)
Rank 2 computing serially ...
Rank 1 finished processing forward sections. Now working on reverse sections....
Rank 1 starting computing on 1 cores (requested 1 cores)
Rank 1 computing serially ...
Rank 0 finished processing forward sections. Now working on reverse sections....
Rank 0 starting computing on 1 cores (requested 1 cores)
Rank 0 computing serially ...
Rank 3 Finished processing reverse loops (and this chunk)
Rank 3 - computed chunk in 30.59 mins or 107.8 msec per pixel. Average: 107.8 msec per pixel.
Rank 3 - Started accumulating results for this chunk
Rank 3 - Finished accumulating results. Writing results of chunk to h5
Rank 2 Finished processing reverse loops (and this chunk)
Rank 2 - computed chunk in 30.73 mins or 108.31 msec per pixel. Average: 108.31 msec per pixel.
Rank 2 - Started accumulating results for this chunk
Rank 2 - Finished accumulating results. Writing results of chunk to h5
Rank 1 Finished processing reverse loops (and this chunk)
Rank 1 - computed chunk in 31.0 mins or 109.26 msec per pixel. Average: 109.26 msec per pixel.
Rank 1 - Started accumulating results for this chunk
Rank 1 - Finished accumulating results. Writing results of chunk to h5
Rank 0 Finished processing reverse loops (and this chunk)
Rank 0 - computed chunk in 31.17 mins or 109.87 msec per pixel. Average: 109.87 msec per pixel.
Rank 0 - Started accumulating results for this chunk
Rank 0 - Finished accumulating results. Writing results of chunk to h5
Rank 3 - wrote its 17024 pixel chunk in 37.24 sec
Rank 3 - 100% complete. Time remaining: 0.0 msec
Rank 1 - wrote its 17024 pixel chunk in 12.43 sec
Rank 1 - 100% complete. Time remaining: 0.0 msec
Rank 0 - wrote its 17024 pixel chunk in 2.03 sec
Rank 0 - 100% complete. Time remaining: 0.0 msec
Rank 2 - wrote its 17024 pixel chunk in 28.64 sec
Rank 2 - 100% complete. Time remaining: 0.0 msec
Rank 3 - Finished reading all data!
Rank 1 - Finished reading all data!
Rank 3 - Finished computing all jobs!
Rank 1 - Finished computing all jobs!
Rank 0 - Finished reading all data!
Rank 0 - Finished computing all jobs!
Rank 2 - Finished reading all data!
Rank 2 - Finished computing all jobs!
Finished processing the entire dataset!
Execution time: 1873.936367034912 sec
